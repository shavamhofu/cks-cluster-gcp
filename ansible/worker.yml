- name: Setup CKS Worker Node
  hosts: workers
  become: yes
  tasks:
    - name: Copy master install script to remote
      ansible.builtin.copy:
        src: k8/install_worker.sh
        dest: /tmp/install_worker.sh
        mode: '0755'

    # - name: Run master install script
    #   # ansible.builtin.shell: |
    #   #   bash <(curl -s https://raw.githubusercontent.com/shavamhofu/cks-cluster-gcp/main/ansible/k8/install_worker.sh)
    #   # args:
    #   #   executable: /bin/bash
    #   ansible.builtin.shell: bash /tmp/install_worker.sh
    #   # ansible.builtin.script: bash ansible/k8/install_worker.sh
    #   register: worker_script_output
      # ignore_errors: yes
    - name: Run worker install script
      ansible.builtin.shell: bash /tmp/install_worker.sh
      # args:
      #   chdir: "{{ playbook_dir }}/.."
      register: worker_script_output
    
    - name: Read join command from file
      set_fact:
        kube_join_cmd: "{{ lookup('file', '/tmp/kubeadm_join_cmd.sh') }}"
      delegate_to: localhost
      run_once: true

    - name: Join worker to cluster
      ansible.builtin.shell: "{{ kube_join_cmd }}"
      
    # - name: Join worker to Kubernetes cluster
    #   ansible.builtin.shell: "{{ hostvars['localhost'].kube_join_cmd }}"
    #   when: worker_script_output.rc == 0 and hostvars['localhost'].kube_join_cmd is defined
    #   register: join_attempt_output
    #   ignore_errors: yes

    # - name: Show join command from master (on worker)
    #   debug:
    #     var: hostvars['localhost'].kube_join_cmd  

    # - name: Show join attempt output
    #   debug:
    #     var: join_attempt_output.stdout_lines

    # - name: Debug worker script output
    #   debug:
    #     var: worker_script_output.stdout_lines 

    # - name: Join worker to Kubernetes cluster
    #   ansible.builtin.shell: "{{ hostvars['all_workers'].kube_join_cmd }}"
    #   when: worker_script_output.rc == 0  
    #   ignore_errors: yes

    # - name: Show join attempt output
    #   debug:
    #     var: join_attempt_output  
    # - name: Copy kubeadm join script from control to worker
    #   ansible.builtin.copy:
    #     src: /tmp/kubeadm_join.sh
    #     dest: /tmp/kubeadm_join.sh
    #     mode: '0755'

    # - name: Join worker to Kubernetes cluster
    #   ansible.builtin.shell: bash /tmp/kubeadm_join.sh
    #   when: worker_script_output.rc == 0


    # - name: Wait for master to write join command file
    #   wait_for:
    #     path: /tmp/kubeadm_join.sh
    #     timeout: 120
    #   delegate_to: masters

    # - name: Fetch join command from master
    #   fetch:
    #     src: /tmp/kubeadm_join.sh
    #     dest: /tmp/kubeadm_join.sh
    #     flat: yes
    #   delegate_to: masters

    # - name: Copy join command to worker
    #   copy:
    #     src: /tmp/kubeadm_join.sh
    #     dest: /tmp/kubeadm_join.sh
    #     mode: '0755'

    # - name: Join Kubernetes Cluster
    #   shell: bash /tmp/kubeadm_join.sh  

#     master
#     - name: Get kubeadm join command from master
#       ansible.builtin.command: kubeadm token create --print-join-command --ttl 0
#       register: join_cmd
#       when: install_output.rc == 0
#       changed_when: false

#     - name: Set join command for use in other plays
#       add_host:
#         name: "all_workers"
#         kube_join_cmd: "{{ join_cmd.stdout }}"  
#       when: install_output.rc == 0

#   worker
#     - name: Run worker install script
#       ansible.builtin.shell: bash /tmp/install_worker.sh
#       # args:
#       #   chdir: "{{ playbook_dir }}/.."
#       register: worker_script_output

#     - name: Debug worker script output
#       debug:
#         var: worker_script_output.stdout_lines 

#     - name: Join worker to Kubernetes cluster
#       ansible.builtin.shell: "{{ hostvars['all_workers'].kube_join_cmd }}"
#       when: worker_script_output.rc == 0  
#       ignore_errors: yes

#     - name: Show join attempt output
#       debug:
#         var: join_attempt_output  
#  the  kube_join_cmd is not running and i do not see the error what could be the problem  

 